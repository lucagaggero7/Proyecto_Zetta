// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Zetta.DB.Data;

#nullable disable

namespace Proyecto_Zetta.DB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241103021620_EliminarRequiredITM")]
    partial class EliminarRequiredITM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Mail")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Apellido", "Nombre" }, "Cliente_Apellido_Nombre");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.FormadePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("FormasDePago");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Instalador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actividad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Apellido", "Nombre" }, "Instalador_Apellido_Nombre");

                    b.ToTable("Instaladores");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.ItemTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Insumos")
                        .HasColumnType("bigint");

                    b.Property<long>("ManodeObra")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<long>("PrecioFinal")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ItemsTipo");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.ItemTipoMaterial", b =>
                {
                    b.Property<int>("ItemTipoId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("ItemTipoId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("ItemsTipoMateriales");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("FechaVisita")
                        .HasColumnType("datetime2");

                    b.Property<int>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<int>("SeguimientoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PresupuestoId");

                    b.HasIndex("SeguimientoId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long>("Precio")
                        .HasColumnType("bigint");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnexarServicio")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstaladorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("InstaladorId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("FormadePagoId")
                        .HasColumnType("int");

                    b.Property<long>("Insumos")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemTipoId")
                        .HasColumnType("int");

                    b.Property<long>("ManodeObra")
                        .HasColumnType("bigint");

                    b.Property<bool>("MaterialesIncl")
                        .HasColumnType("bit");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<long>("PrecioFinal")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("FormadePagoId");

                    b.HasIndex("ItemTipoId");

                    b.HasIndex("ObraId");

                    b.ToTable("Presupuestos");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("MantenimientoIncl")
                        .HasColumnType("bit");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.ItemTipoMaterial", b =>
                {
                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.ItemTipo", "ItemTipo")
                        .WithMany("ItemTipoMateriales")
                        .HasForeignKey("ItemTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Material", "Material")
                        .WithMany("ItemTipoMateriales")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTipo");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Mantenimiento", b =>
                {
                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Presupuesto", "Presupuesto")
                        .WithMany()
                        .HasForeignKey("PresupuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Seguimiento", "Seguimiento")
                        .WithMany()
                        .HasForeignKey("SeguimientoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Presupuesto");

                    b.Navigation("Seguimiento");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Obra", b =>
                {
                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Instalador", "Instalador")
                        .WithMany()
                        .HasForeignKey("InstaladorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Instalador");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Presupuesto", b =>
                {
                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.FormadePago", "FormadePago")
                        .WithMany()
                        .HasForeignKey("FormadePagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.ItemTipo", "ItemTipo")
                        .WithMany()
                        .HasForeignKey("ItemTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormadePago");

                    b.Navigation("ItemTipo");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Seguimiento", b =>
                {
                    b.HasOne("Proyecto_Zetta.DB.Data.Entity.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.ItemTipo", b =>
                {
                    b.Navigation("ItemTipoMateriales");
                });

            modelBuilder.Entity("Proyecto_Zetta.DB.Data.Entity.Material", b =>
                {
                    b.Navigation("ItemTipoMateriales");
                });
#pragma warning restore 612, 618
        }
    }
}
