@page "/api/Contratos"

@inject IHttpServicio http
<h3>Lista de Contratos</h3>

<a class="btn btn-primary nuevo-contrato-btn" href="/api/Contratos/crear">Nuevo Contrato</a>


<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        padding: 12px;
        text-align: left;
        border: 1px solid #ddd;
    }
    th {
        background-color: #f2f2f2;
    }

    .nuevo-contrato-btn {
        margin-bottom: 20px; /* Añade espacio entre el botón y la tabla */
        transition: opacity 0.3s ease; /* Transición suave para el efecto de hover */
    }

    .nuevo-contrato-btn:hover {
        opacity: 0.8; /* Cambia la opacidad cuando el cursor está encima */
    }

    .nuevo-contrato-btn {
        transition: opacity 0.3s ease; /* Transición suave para el efecto de hover */
    }

    .editar-contrato-btn:hover {
        opacity: 0.8; /* Cambia la opacidad cuando el cursor está encima */
    }

    .eliminar-contrato-btn {
        transition: opacity 0.3s ease; /* Transición suave para el efecto de hover */
    }

    .eliminar-contrato-btn:hover {
        opacity: 0.8; /* Cambia la opacidad cuando el cursor está encima */
    }
</style>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Estado</th>
            <th>Tipo</th>
            <th>Descripcion</th>
            <th>Fecha de Alta</th>
            <th>Instalador Id</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
    @if(Mensaje =="")
    {
    @if (listaContratos == null)
    {
            <p>Buscando...</p>
        }
        else if(listaContratos.Count == 0)
        {
            <p>No existen contratos</p>
        }
        else
    {
        @foreach (var item in listaContratos)
        {
            <tr> 
                <td>
                    @item.Estado
                </td>
                <td>
                    @item.Tipo
                </td>
                <td>
                    @item.Descripcion
                </td>
                <td>
                    @item.FechaAlta.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @item.InstaladorId
                </td>
                <td>
                    <a class="btn btn-primary editar-contrato-btn" 
                        href="api/Contratos/editar/@item.Id">
                        Editar
                    </a>
                </td>
                <td>
                    <a class="btn btn-danger eliminar-contrato-btn"
                        @onclick="() => Eliminar(item.Id)">
                        Eliminar
                    </a>
                </td>
            </tr>
        }
        }
    }
    else
    {
        <p> Error: @Mensaje</p>
    }
    </tbody>
</table>

@code {
    List<Obra> listaContratos;
    string Mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Eliminar(int Id)
    {
        await http.Delete<Obra>($"api/Contratos/{Id}");
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Obra>>("api/Contratos");
        if (!resp.Error)
        {
            listaContratos = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
}
