@page "/api/Contratos/editar/{contratoId:int}"
@using Proyecto_Zetta.Shared.DTO
@inject IHttpServicio http
@inject NavigationManager nav

<h3>
    Editar Contrato
</h3>

<EditForm Model="obra" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>
            Estado
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@obra.Estado" />
            <ValidationMessage For="@(() => obra.Estado)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Descripcion
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@obra.Descripcion" />
            <ValidationMessage For="@(() => obra.Descripcion)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Fecha de Alta
        </label>
        <div>
            <InputDate class="form-control" @bind-Value="@obra.FechaAlta" />
            <ValidationMessage For="@(() => obra.FechaAlta)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Anexar Servicio
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@obra.AnexarServicio" />
            <ValidationMessage For="@(() => obra.AnexarServicio)" />
        </div>
    </div>
    <div class="form-group">
        <label>Instalador</label>
        <div>
            <InputSelect class="form-control" @bind-Value="@obra.InstaladorId">
                <option value="">Seleccione un instalador</option>
                @foreach (var instalador in listaInstaladores)
                {
                    <option value="@instalador.Id">@instalador.NombreCompleto</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => obra.InstaladorId)" />
        </div>
    </div>
    <div class="form-group">
        <label>Cliente</label>
        <div>
            <InputSelect class="form-control" @bind-Value="@obra.ClienteId">
                <option value="">Seleccione un cliente</option>
                @foreach (var cliente in listaClientes)
                {
                    <option value="@cliente.Id">@cliente.NombreCompleto</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => obra.ClienteId)" />
        </div>
    </div>

    <br />

    <button class="btn btn-primary" type="submit"> Aceptar </button>
    <button class="btn btn-secondary" @onclick="Cancelar"> Cancelar </button>

</EditForm>

@code {
    [Parameter] public int contratoId { get; set; }
    private EditarObraDTO obra = new EditarObraDTO();
    private List<Instalador> listaInstaladores = new List<Instalador>();
    private List<Cliente> listaClientes = new List<Cliente>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await CargarInstaladores();
        await CargarClientes();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<EditarObraDTO>($"api/Contratos/GetById/{contratoId}");

        if (!respuesta.Error)
        {
            obra = respuesta.Respuesta;
        }
        else
        {
            nav.NavigateTo("/api/Contratos");
        }
    }

    private async Task CargarInstaladores()
    {
        var respuesta = await http.Get<List<Instalador>>("api/Instaladores");
        if (!respuesta.Error)
        {
            listaInstaladores = respuesta.Respuesta;
        }
    }

    private async Task CargarClientes()
    {
        var respuesta = await http.Get<List<Cliente>>("api/Clientes");
        if (!respuesta.Error)
        {
            listaClientes = respuesta.Respuesta;
        }
    }

    private async Task Grabar()
    {
        var httpRespuesta = await http.Put<EditarObraDTO>($"api/Contratos/{contratoId}", obra);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        nav.NavigateTo("/api/Contratos");
    }

    private void Cancelar()
    {
        nav.NavigateTo("/api/Contratos");
    }

    public class Instalador
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Apellido { get; set; }
        public string NombreCompleto => $"{Nombre} {Apellido}";
    }

    public class Cliente
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Apellido { get; set; }
        public string NombreCompleto => $"{Nombre} {Apellido}";
    }
}
