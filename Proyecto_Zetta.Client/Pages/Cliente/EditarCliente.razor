@page "/Clientes/editar/{clienteId:int}"
@using Proyecto_Zetta.Shared.DTO
@inject IHttpServicio http
@inject NavigationManager nav

<h3>
    Editar Cliente
</h3>

<EditForm Model="cliente" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>
            Nombre
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Nombre" />
            <ValidationMessage For="@(() => cliente.Nombre)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Apellido
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Apellido" />
            <ValidationMessage For="@(() => cliente.Apellido)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Direccion
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Direccion" />
            <ValidationMessage For="@(() => cliente.Direccion)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Localidad
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Localidad" />
            <ValidationMessage For="@(() => cliente.Localidad)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Telefono
        </label>
        <div>
            <InputNumber class="form-control" @bind-Value="@cliente.Telefono" />
            <ValidationMessage For="@(() => cliente.Telefono)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Mail
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Mail" />
            <ValidationMessage For="@(() => cliente.Mail)" />
        </div>
    </div>
    <div class="form-group">
        <label>
            Descripcion
        </label>
        <div>
            <InputText class="form-control" @bind-Value="@cliente.Descripcion" />
            <ValidationMessage For="@(() => cliente.Descripcion)" />
        </div>
    </div>

    <br />

    <button class="btn btn-primary" type="submit"> Aceptar </button>
    <button class="btn btn-secondary" @onclick="Cancelar"> Cancelar </button>

</EditForm>

@code {
    [Parameter] public int clienteId { get; set; }
    private EditarClienteDTO cliente = new EditarClienteDTO();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<EditarClienteDTO>($"api/Clientes/GetById/{clienteId}");

        if (!respuesta.Error)
        {
            cliente = respuesta.Respuesta;
        }
        else
        {
            nav.NavigateTo("/Clientes");
        }
    }



    private async Task Grabar()
    {
        var httpRespuesta = await http.Put<EditarClienteDTO>($"api/Clientes/{clienteId}", cliente);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        nav.NavigateTo("/Clientes");
    }

    private void Cancelar()
    {
        nav.NavigateTo("/Clientes");
    }
}
